{
	"info": {
		"_postman_id": "626f73ad-993c-4a0a-9ebb-afc8906be4e5",
		"name": "Homework",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "15436880"
	},
	"item": [
		{
			"name": "SINGLE <RESOURCE>",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => { ",
							"    pm.expect(jsonData.data.name).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"Test value year = 2001\", () => {",
							"  pm.expect(jsonData.data.year).to.eql(2001);",
							"});",
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/unknown/2",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"unknown",
						"2"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 200\",function(){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test (\"Body is correct\", function () {",
							"    var jsonData=pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"name\");",
							"    console.log(\"update name\", jsonData.job);",
							"});",
							"",
							"pm.test (\"response time is less than 7000ms\", function(){",
							"    pm.expect(pm.response.responseTime).to.be.below(7000);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"ryandi puraba\",\n    \"job\": \"programmer\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{url}}/api/users/2"
			},
			"response": []
		},
		{
			"name": "DELETE USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 204\",function(){",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Response time is less than 700ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(700);",
							"});",
							"",
							"pm.test(\"Check the active environment\", () => {",
							"  pm.expect(pm.environment.name).to.eql(\"Fazztrack\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "{{url}}/api/users/1"
			},
			"response": []
		},
		{
			"name": "REGISTER USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 201 created\", () =>{",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Successful POST request\", () => {",
							"  pm.expect(pm.response.code).to.be.oneOf([201,202]);",
							"});",
							"",
							"pm.test(\"Status code name has string\", () => {",
							"  pm.response.to.have.status(\"Created\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"ryandi pratama purba\",\n    \"job\": \"programmer\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{url}}/api/users"
			},
			"response": []
		},
		{
			"name": "UPDATE USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(jsonData).to.be.an(\"object\");",
							"});",
							"",
							"pm.test(\"Value is in valid list\", () => {",
							"  pm.expect(pm.response.json().name)",
							"    .to.be.oneOf([\"jemmi anugerah\", \"joko\", \"budi\"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"jemmi anugerah\",\n    \"job\": \"digital illlustrator\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{url}}/api/users/2"
			},
			"response": []
		}
	]
}